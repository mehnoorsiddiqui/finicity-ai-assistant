/**
 * Finicity APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { ErrorMessageError } from '../errors/errorMessageError';
import { Asset, assetSchema } from '../models/asset';
import { PayStatement, payStatementSchema } from '../models/payStatement';
import { string } from '../schema';
import { BaseController } from './baseController';

export class PayStatementsController extends BaseController {
  /**
   * Upload pay statements for a customer.
   *
   * _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
   *
   * @param customerId   A Finicity customer ID
   * @param body
   * @return Response from the API call
   */
  async storeCustomerPayStatement(
    customerId: string,
    body: PayStatement,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<Asset>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, string()],
      body: [body, payStatementSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/aggregation/v1/customers/${mapped.customerId}/payStatements`;
    req.throwOn(400, ErrorMessageError, 'The request was rejected');
    req.throwOn(401, ErrorMessageError, 'The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".');
    req.throwOn(404, ErrorMessageError, 'The resource doesn\'t exist');
    return req.callAsJson(assetSchema, requestOptions);
  }
}
