/**
 * Finicity APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { ErrorMessageError } from '../errors/errorMessageError';
import {
  CreatedTestTxPushTransaction,
  createdTestTxPushTransactionSchema,
} from '../models/createdTestTxPushTransaction';
import {
  TestTxPushTransaction,
  testTxPushTransactionSchema,
} from '../models/testTxPushTransaction';
import {
  TxPushSubscriptionParameters,
  txPushSubscriptionParametersSchema,
} from '../models/txPushSubscriptionParameters';
import {
  TxPushSubscriptions,
  txPushSubscriptionsSchema,
} from '../models/txPushSubscriptions';
import { bigint, string } from '../schema';
import { BaseController } from './baseController';

export class TxPushController extends BaseController {
  /**
   * Register a client app's TxPush Listener to receive TxPush notifications related to the given account.
   *
   * Each call to this service will return two records, one with class account and one with class
   * transaction. Account events are sent when values change in the account's fields (such as `balance`
   * or `interestRate`). Transaction events are sent whenever a new transaction is posted for the account.
   * For institutions that do not provide TxPush services, notifications are sent as soon as Finicity
   * finds a new transaction or new account data through regular aggregation processes.
   *
   * For additional details on this process, see [TxPush Listener Service](https://docs.finicity.
   * com/txpush-listener-service/).
   *
   * _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
   *
   * @param customerId   A Finicity customer ID
   * @param accountId    The account ID
   * @param body
   * @return Response from the API call
   */
  async subscribeToTxPushNotifications(
    customerId: string,
    accountId: string,
    body: TxPushSubscriptionParameters,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<TxPushSubscriptions>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, string()],
      accountId: [accountId, string()],
      body: [body, txPushSubscriptionParametersSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/aggregation/v1/customers/${mapped.customerId}/accounts/${mapped.accountId}/txpush`;
    req.throwOn(400, ErrorMessageError, 'The request was rejected');
    req.throwOn(401, ErrorMessageError, 'The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".');
    req.throwOn(404, ErrorMessageError, 'The resource doesn\'t exist');
    return req.callAsJson(txPushSubscriptionsSchema, requestOptions);
  }

  /**
   * Delete all TxPush subscriptions with their notifications for the given account. No more
   * notifications will be sent for account or transaction events.
   *
   * For additional details on this process, see [TxPush Listener Service](https://docs.finicity.
   * com/txpush-listener-service/).
   *
   * _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
   *
   * @param customerId A Finicity customer ID
   * @param accountId  The account ID
   * @return Response from the API call
   */
  async disableTxPushNotifications(
    customerId: string,
    accountId: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('DELETE');
    const mapped = req.prepareArgs({
      customerId: [customerId, string()],
      accountId: [accountId, string()],
    });
    req.appendTemplatePath`/aggregation/v1/customers/${mapped.customerId}/accounts/${mapped.accountId}/txpush`;
    req.throwOn(400, ErrorMessageError, 'The request was rejected');
    req.throwOn(401, ErrorMessageError, 'The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".');
    req.throwOn(404, ErrorMessageError, 'The resource doesn\'t exist');
    return req.call(requestOptions);
  }

  /**
   * Inject a transaction into the transaction list for a testing account. This allows an app to trigger
   * TxPush notifications for the account in order to test the app's TxPush Listener service. This causes
   * the platform to send one transaction event and one account event (showing that the account balance
   * has changed). This service is only supported for testing accounts.
   *
   * For additional details on this process, see [TxPush Listener Service](https://docs.finicity.
   * com/txpush-listener-service/).
   *
   * _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
   *
   * @param customerId   A Finicity customer ID
   * @param accountId    The account ID
   * @param body
   * @return Response from the API call
   */
  async createTxPushTestTransaction(
    customerId: string,
    accountId: string,
    body: TestTxPushTransaction,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<CreatedTestTxPushTransaction>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, string()],
      accountId: [accountId, string()],
      body: [body, testTxPushTransactionSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/aggregation/v1/customers/${mapped.customerId}/accounts/${mapped.accountId}/transactions`;
    req.throwOn(400, ErrorMessageError, 'The request was rejected');
    req.throwOn(401, ErrorMessageError, 'The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".');
    req.throwOn(404, ErrorMessageError, 'The resource doesn\'t exist');
    return req.callAsJson(createdTestTxPushTransactionSchema, requestOptions);
  }

  /**
   * Delete a specific subscription to TxPush notifications for the given account. This could be
   * individual deleting the account or transactions events. No more events will be sent for that
   * specific subscription.
   *
   * For additional details on this process, see [TxPush Listener Service](https://docs.finicity.
   * com/txpush-listener-service/).
   *
   * _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
   *
   * @param customerId     A Finicity customer ID
   * @param subscriptionId The subscription ID
   * @return Response from the API call
   */
  async deleteTxPushSubscription(
    customerId: string,
    subscriptionId: bigint,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('DELETE');
    const mapped = req.prepareArgs({
      customerId: [customerId, string()],
      subscriptionId: [subscriptionId, bigint()],
    });
    req.appendTemplatePath`/aggregation/v1/customers/${mapped.customerId}/subscriptions/${mapped.subscriptionId}`;
    req.throwOn(400, ErrorMessageError, 'The request was rejected');
    req.throwOn(401, ErrorMessageError, 'The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".');
    req.throwOn(404, ErrorMessageError, 'The resource doesn\'t exist');
    return req.call(requestOptions);
  }
}
