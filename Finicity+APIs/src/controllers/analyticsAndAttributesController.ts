/**
 * Finicity APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { ErrorMessageError } from '../errors/errorMessageError';
import {
  ConsumerAttributeAccountIDs,
  consumerAttributeAccountIDsSchema,
} from '../models/consumerAttributeAccountIDs';
import {
  ConsumerAttributeList,
  consumerAttributeListSchema,
} from '../models/consumerAttributeList';
import {
  ConsumerAttributes,
  consumerAttributesSchema,
} from '../models/consumerAttributes';
import {
  ConsumerAttributesAnalyticId,
  consumerAttributesAnalyticIdSchema,
} from '../models/consumerAttributesAnalyticId';
import { optional, string } from '../schema';
import { BaseController } from './baseController';

export class AnalyticsAndAttributesController extends BaseController {
  /**
   * Generate a Consumer Attributes report for the given customer. The "to" and "from" date range is the
   * last 12 months of consumer data, based on the date at which the report was generated.
   *
   * An analytic ID is created and associated with the customer's ID. If you generate multiple Consumer
   * Attributes reports for the same customer, then each report will have its own analytic ID.
   *
   * _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
   *
   * @param customerId   A Finicity customer ID
   * @param body
   * @return Response from the API call
   */
  async generateConsumerAttributes(
    customerId: string,
    body?: ConsumerAttributeAccountIDs,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ConsumerAttributesAnalyticId>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, string()],
      body: [body, optional(consumerAttributeAccountIDsSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/analytics/ca360/v1/customers/${mapped.customerId}/analytics`;
    req.throwOn(400, ErrorMessageError, 'The request was rejected');
    req.throwOn(401, ErrorMessageError, 'The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".');
    req.throwOn(404, ErrorMessageError, 'The resource doesn\'t exist');
    return req.callAsJson(consumerAttributesAnalyticIdSchema, requestOptions);
  }

  /**
   * Retrieve the list of all analytic IDs previously created for a customer using the "Generate Consumer
   * Attributes" APIs.
   *
   * _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
   *
   * @param customerId A Finicity customer ID
   * @return Response from the API call
   */
  async listConsumerAttributes(
    customerId: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ConsumerAttributeList>> {
    const req = this.createRequest('GET');
    const mapped = req.prepareArgs({ customerId: [customerId, string()] });
    req.appendTemplatePath`/analytics/ca360/v1/customers/${mapped.customerId}/analytics`;
    req.throwOn(400, ErrorMessageError, 'The request was rejected');
    req.throwOn(401, ErrorMessageError, 'The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".');
    req.throwOn(404, ErrorMessageError, 'The resource doesn\'t exist');
    return req.callAsJson(consumerAttributeListSchema, requestOptions);
  }

  /**
   * _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
   *
   * @param customerId   A Finicity customer ID
   * @param body
   * @return Response from the API call
   */
  async generateFCRAConsumerAttributes(
    customerId: string,
    body?: ConsumerAttributeAccountIDs,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ConsumerAttributesAnalyticId>> {
    const req = this.createRequest('POST');
    const mapped = req.prepareArgs({
      customerId: [customerId, string()],
      body: [body, optional(consumerAttributeAccountIDsSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.appendTemplatePath`/analytics/ca360/v1/customers/${mapped.customerId}/analytics/fcra`;
    req.throwOn(400, ErrorMessageError, 'The request was rejected');
    req.throwOn(401, ErrorMessageError, 'The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".');
    req.throwOn(404, ErrorMessageError, 'The resource doesn\'t exist');
    return req.callAsJson(consumerAttributesAnalyticIdSchema, requestOptions);
  }

  /**
   * Retrieve a Consumer Attributes report for a customer.
   *
   * Use the analytic and customer IDs to retrieve 12 months of data attributes according to the "to" and
   * "from" date range of the report at the time it was created.
   *
   * If the current date is before the end of the calendar month, then the most recent month provides all
   * available data up to the current date.
   *
   * _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
   *
   * @param analyticsId The Finicity analytic ID
   * @param customerId  A Finicity customer ID
   * @return Response from the API call
   */
  async getConsumerAttributesByID(
    analyticsId: string,
    customerId: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ConsumerAttributes>> {
    const req = this.createRequest('GET');
    const mapped = req.prepareArgs({
      analyticsId: [analyticsId, string()],
      customerId: [customerId, string()],
    });
    req.appendTemplatePath`/analytics/ca360/v1/customers/${mapped.customerId}/analytics/${mapped.analyticsId}`;
    req.throwOn(400, ErrorMessageError, 'The request was rejected');
    req.throwOn(401, ErrorMessageError, 'The request lacks valid authentication credentials. Check "Finicity-App-Key" or "Finicity-App-Token".');
    req.throwOn(404, ErrorMessageError, 'The resource doesn\'t exist');
    return req.callAsJson(consumerAttributesSchema, requestOptions);
  }
}
