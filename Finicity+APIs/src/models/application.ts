/**
 * Finicity APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, Schema, string } from '../schema';

export interface Application {
  /** A short description of the app. This will be visible to end users in the FI interface. */
  appDescription: string;
  /** The name of the application assigned to the customer */
  appName: string;
  /** An URL for the app. This will be visible to end users in the FI interface. */
  appUrl: string;
  /** An address line 1 */
  ownerAddressLine1: string;
  /** An address line 2 */
  ownerAddressLine2: string;
  /** City for the business entity that owns the app. Information for registration purposes only and not given to the end user. */
  ownerCity: string;
  /** Country for the  business entity that owns the app. Information for registration purposes only and not given to the end user. */
  ownerCountry: string;
  /** Business name for the business entity that owns the app. Information for registration purposes only and not given to the end user. */
  ownerName: string;
  /** Zip code for the business entity that owns the app. Information for registration purposes only and not given to the end user. */
  ownerPostalCode: string;
  /** State for the business entity that owns the app. Information for registration purposes only and not given to the end user. */
  ownerState: string;
  /** An app logo passed as a Base64 encoded image (1:1 SVG file, must be less than 50KB) */
  image: string;
}

export const applicationSchema: Schema<Application> = object({
  appDescription: ['appDescription', string()],
  appName: ['appName', string()],
  appUrl: ['appUrl', string()],
  ownerAddressLine1: ['ownerAddressLine1', string()],
  ownerAddressLine2: ['ownerAddressLine2', string()],
  ownerCity: ['ownerCity', string()],
  ownerCountry: ['ownerCountry', string()],
  ownerName: ['ownerName', string()],
  ownerPostalCode: ['ownerPostalCode', string()],
  ownerState: ['ownerState', string()],
  image: ['image', string()],
});
