/**
 * Finicity APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, number, object, Schema, string } from '../schema';
import { CadenceDetails, cadenceDetailsSchema } from './cadenceDetails';
import {
  EstimateInclusionEnum,
  estimateInclusionEnumSchema,
} from './estimateInclusionEnum';
import { NetMonthly, netMonthlySchema } from './netMonthly';
import { ReportTransaction, reportTransactionSchema } from './reportTransaction';
import { StatusEnum, statusEnumSchema } from './statusEnum';

export interface ReportIncomeStream {
  /** Finicity's income stream ID */
  id: string;
  /** A human-readable name based on the normalizedPayee name of the transactions for this income stream */
  name: string;
  status: StatusEnum;
  /** Estimate Inclusion */
  estimateInclusion: EstimateInclusionEnum;
  /** Level of confidence that the deposit stream represents income */
  confidence: number;
  cadence: CadenceDetails;
  /** A list of net monthly records. One instance for each complete calendar month in the report */
  netMonthly: NetMonthly[];
  /** Sum of all values in netMonthlyIncome over the previous 12 months */
  netAnnual: number;
  /** Projected net income over the next 12 months, across all income streams, based on netAnnualIncome */
  projectedNetAnnual: number;
  /** Before-tax gross annual income (estimated from netAnnual) across all income stream in the past 12 months */
  estimatedGrossAnnual: number;
  /** Projected gross income over the next 12 months, across all active income streams, based on projectedNetAnnual */
  projectedGrossAnnual: number;
  /** Monthly average amount over the previous 24 months */
  averageMonthlyIncomeNet: number;
  /** A list of transaction records */
  transactions: ReportTransaction[];
}

export const reportIncomeStreamSchema: Schema<ReportIncomeStream> = object({
  id: ['id', string()],
  name: ['name', string()],
  status: ['status', statusEnumSchema],
  estimateInclusion: ['estimateInclusion', estimateInclusionEnumSchema],
  confidence: ['confidence', number()],
  cadence: ['cadence', lazy(() => cadenceDetailsSchema)],
  netMonthly: ['netMonthly', array(lazy(() => netMonthlySchema))],
  netAnnual: ['netAnnual', number()],
  projectedNetAnnual: ['projectedNetAnnual', number()],
  estimatedGrossAnnual: ['estimatedGrossAnnual', number()],
  projectedGrossAnnual: ['projectedGrossAnnual', number()],
  averageMonthlyIncomeNet: ['averageMonthlyIncomeNet', number()],
  transactions: ['transactions', array(lazy(() => reportTransactionSchema))],
});
