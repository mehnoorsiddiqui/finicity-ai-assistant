/**
 * Finicity APIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  bigint,
  boolean,
  lazy,
  number,
  object,
  Schema,
  string,
} from '../schema';
import { Transaction, transactionSchema } from './transaction';

/** A list of transactions */
export interface Transactions {
  /** The total number of results matching search criteria */
  found: number;
  /** The number of results returned */
  displaying: number;
  /** If `true`, you can fetch the next page of results */
  moreAvailable: boolean;
  /** A date in Unix epoch time (in seconds). See also: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/). */
  fromDate: bigint;
  /** A date in Unix epoch time (in seconds). See also: [Handling Epoch Dates and Times](https://docs.finicity.com/endpoint-syntax-and-format/). */
  toDate: bigint;
  /** Value of the sort request parameter that generated this response */
  sort: string;
  /** The array of transactions */
  transactions: Transaction[];
}

export const transactionsSchema: Schema<Transactions> = object({
  found: ['found', number()],
  displaying: ['displaying', number()],
  moreAvailable: ['moreAvailable', boolean()],
  fromDate: ['fromDate', bigint()],
  toDate: ['toDate', bigint()],
  sort: ['sort', string()],
  transactions: ['transactions', array(lazy(() => transactionSchema))],
});
